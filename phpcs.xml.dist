<?xml version="1.0"?>
<ruleset name="content-moderation">
	<description>Content Moderation coding standards</description>
	<!--
	Prevent errors caused by WordPress Coding Standards not supporting PHP > 8.0.
	See https://github.com/WordPress/WordPress-Coding-Standards/issues/2035
	-->
	<ini name="error_reporting" value="E_ALL &#38; ~E_DEPRECATED" />

	<!-- Some configuration defaults -->
	<arg name="extensions" value="php" />

	<!-- Cache the results of sniffs -->
	<arg name="cache" value="tests/cache/phpcs.json" />

	<!-- Append arg -s to phpcs to display the name of failed sniffs -->
	<arg value="s"/>

	<!-- Set a minimum PHP version for PHPCompatibility -->
	<config name="testVersion" value="8.1-" />

	<!-- Use HM Coding Standards -->
	<rule ref="HM">
		<!-- Don't restrict file and directory names -->
		<exclude name="HM.Files.NamespaceDirectoryName" />
		<exclude name="HM.Files.FunctionFileName.WrongFile" />
		<exclude name="HM.Files.ClassFileName.MismatchedName" />

		<!-- Exclude short description sniff so short `@var` notation can be used -->
		<exclude name="Generic.Commenting.DocComment.MissingShort"/>

		<!-- This faulty sniff has been removed in the most recent PSR2R standard, but it is still included in the HM one -->
		<exclude name="PSR2R.Namespaces.UseInAlphabeticalOrder.Order"/>

		<!-- Nobody cares about the end character for inline comments -->
		<exclude name="Squiz.Commenting.InlineComment.InvalidEndChar"/>

		<!-- Exclude deprecated sniff for call-time pass-by-reference -->
		<exclude name="Generic.Functions.CallTimePassByReference"/>

		<!-- Exclude sniff that scans JS files, as this is deprecated in PHPCS 4.0 -->
		<exclude name="HM.Debug.ESLint"/>
	</rule>

	<!-- Exclude other dependencies and directories -->
	<exclude-pattern>./tests/*</exclude-pattern>
	<exclude-pattern>./vendor/*</exclude-pattern>


	<!-- Exclude build directories -->
	<exclude-pattern>/build</exclude-pattern>

</ruleset>
